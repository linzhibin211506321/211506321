//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : StaticData.cpp
//  @ Date : 2017/10/28
//  @ Author : 
//
//


#include "StaticData.h"
#include "cocos2d.h"
using namespace std;
using namespace cocos2d;

static StaticData* g_sharedStaticData = NULL;
StaticData* StaticData::sharedStaticData() {
	if(g_sharedStaticData == NULL)
	{
		g_sharedStaticData = new StaticData;
		g_sharedStaticData->init();
	}
	return g_sharedStaticData;
}

bool StaticData::init() {
	_dictionary = CCDictionary::createWithContentsOfFile(_staticFileName.c_str());
	_dictionary->retain();
	return true;
}

const char* StaticData::stringFromKey(const std::string &key) {
	return _dictionary->valueForKey(key)->getCString();
}

int StaticData::intFromKey(const std::string &key) {
	return _dictionary->valueForKey(key)->intValue();
}

int StaticData::floatFromKey(const std::string &key) {
	return _dictionary->valueForKey(key)->floatValue();
}

bool StaticData::booleanFromKey(const std::string &key) {
	return _dictionary->valueForKey(key)->boolValue();
}

cocos2d::CCPoint StaticData::pointFromKey(const std::string &key) {
	return CCPointFromString(_dictionary->valueForKey(key)->getCString());
}

cocos2d::CCRect StaticData::rectFromKey(const std::string &key) {
	return CCRectFromString(_dictionary->valueForKey(key)->getCString());
}

cocos2d::CCSize StaticData::sizeFromKey(const std::string &key) {
	return CCSizeFromString(_dictionary->valueForKey(key)->getCString());
}

void StaticData::purge() {

}

StaticData::StaticData() {
	/*CC_SAFE_RELEASE_NULL(_dictionary);*/
	if(_dictionary != NULL)
	{
	_dictionary->release();
	_dictionary;
	}
}

StaticData::~StaticData() {

}